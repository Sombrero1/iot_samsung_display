/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler),
    updateItemCallback(this, &Screen2ViewBase::updateItemCallbackHandler)
{

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_Q1FU3PPQXSE_ID));

    boxWithBorder1.setPosition(0, 0, 480, 272);
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 145, 234));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(0);
    boxWithBorder1.setAlpha(121);

    scrollWheel1.setPosition(190, -8, 100, 272);
    scrollWheel1.setHorizontal(false);
    scrollWheel1.setCircular(false);
    scrollWheel1.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollWheel1.setSwipeAcceleration(10);
    scrollWheel1.setDragAcceleration(10);
    scrollWheel1.setNumberOfItems(10);
    scrollWheel1.setSelectedItemOffset(0);

    container1.setPosition(106, 43, 309, 75);

    toggleButton1.setXY(201, 25);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_SMALL_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_SMALL_BUTTON_ON_ID));
    toggleButton1.setAction(buttonCallback);
    toggleButton1.setAlpha(209);
    container1.add(toggleButton1);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLE_ID));
    scalableImage1.setPosition(143, 58, 152, 55);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    scalableImage1.setAlpha(231);

    textArea2.setXY(153, 13);
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID15));

    Image4.setXY(260, 68);
    Image4.setBitmap(touchgfx::Bitmap(BITMAP_LAMP_ID));

    textArea3.setXY(153, 72);
    textArea3.setColor(touchgfx::Color::getColorFrom24BitRGB(222, 249, 255));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID16));

    repeatButton1.setXY(6, 3);
    repeatButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ARROW_ID), touchgfx::Bitmap(BITMAP_ARROW_ID));
    repeatButton1.setDelay(12);
    repeatButton1.setInterval(60);
    repeatButton1.setAction(buttonCallback);

    add(image1);
    add(boxWithBorder1);
    add(scrollWheel1);
    add(container1);
    add(scalableImage1);
    add(textArea2);
    add(Image4);
    add(textArea3);
    add(repeatButton1);
}

void Screen2ViewBase::setupScreen()
{
    scrollWheel1.initialize();
}

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
    {
        //Interaction2
        //When toggleButton1 clicked call virtual function
        //Call function1
        function1();
    }
    else if (&src == &repeatButton1)
    {
        //Interaction1
        //When repeatButton1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards North
        application().gotoScreen1ScreenSlideTransitionNorth();
    }
}

void Screen2ViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{

}
